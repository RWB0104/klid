{"version":3,"sources":["components/header/Header.tsx","components/footer/Footer.tsx","components/global/Section.tsx","global/variable.ts","components/header/Meta.tsx","pages/Home.tsx","global/state.ts","global/util.ts","components/list/WorkItem.tsx","components/list/WorkList.tsx","api/ListAPI.ts","components/list/ItemViewer.tsx","pages/List.tsx","api/StatisticsAPI.ts","components/statistics/MonthTable.tsx","components/statistics/TotalTable.tsx","components/statistics/DetailTable.tsx","pages/Statistics.tsx","pages/Report.tsx","App.tsx","global/reportWebVitals.ts","index.tsx"],"names":["Header","className","src","to","data-path","Footer","size","data-name","title","data-active","onClick","open","path","mdiGithub","color","mdiGmail","mdiWeb","mdiReact","Section","url","width","children","data-section","style","maxWidth","SITE_NAME","URL","Meta","description","image","fullTitle","name","content","Home","defaultItemViewerState","seq","type","worker","start","Date","getTime","end","itemViewerAtom","atom","key","default","flag","isAdd","item","getDateDetail","raw","date","undefined","year","getFullYear","toString","month","getMonth","day","getDate","week","getDay","hour","getHours","minute","getMinutes","second","getSeconds","WorkItem","onlyView","setItemViewerState","useSetRecoilState","startDate","endDate","data-type","data-view","data-key","align","WorkList","list","items","length","colSpan","map","index","API_URL","getList","a","fetch","method","response","ok","json","body","getWeekList","postList","headers","JSON","stringify","putList","deleteList","ItemViewer","useRecoilState","itemViewerState","id","data-show","e","target","mdiClose","onSubmit","preventDefault","nativeEvent","submitter","getAttribute","active","alert","htmlFor","value","onChange","placeholder","required","interactive","mdiFileUpload","mdiBookEdit","mdiDeleteOff","List","useState","setYear","setMonth","setList","useEffect","yearList","Icon","mdiPlus","aria-label","max","currentTarget","getStatistics","MonthTable","stat","meta","start_date","end_date","data-td","all","monitor","kais","city","check","done","develope","educate","total","fail","TotalTable","percent","isNaN","Math","ceil","DetailTable","data-tr","Statistics","listState","setListState","yearState","setYearState","monthState","setMonthtate","presentState","setPresentState","pastState","setPastState","split","yr","wk","present","past","Report","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementsByTagName"],"mappings":"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","file":"static/js/main.3baad0da.chunk.js","sourcesContent":["/**\r\n * 헤더 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 00:54:03\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\n/**\r\n * 헤더 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Header(): ReactElement\r\n{\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"title\">\r\n\t\t\t\t<img src=\"/klid/logo.png\" />\r\n\t\t\t\t<b>도로명주소 업무 시스템</b>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<Link to=\"/\" data-path=\"home\"><span>🏠</span> <span>Home</span></Link>\r\n\t\t\t\t<Link to=\"/list\" data-path=\"list\"><span>📋</span> <span>List</span></Link>\r\n\t\t\t\t<Link to=\"/statistics\" data-path=\"statistics\"><span>📊</span> <span>Statistics</span></Link>\r\n\t\t\t\t<Link to=\"/report\" data-path=\"report\"><span>📝</span> <span>Report</span></Link>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}","/**\r\n * 푸터 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 10:13:57\r\n */\r\n\r\nimport { mdiGithub, mdiGmail, mdiReact, mdiWeb } from '@mdi/js';\r\nimport Icon from '@mdi/react';\r\nimport React, { ReactElement } from 'react';\r\nimport './Footer.scss';\r\n\r\n/**\r\n * 푸터 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Footer(): ReactElement\r\n{\r\n\tconst size = 1.2;\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<div data-name=\"interact\">\r\n\t\t\t\t<button className=\"icon-button\" title=\"github\" data-active=\"github\" onClick={() => open('https://github.com/RWB0104')}>\r\n\t\t\t\t\t<Icon path={mdiGithub} color=\"grey\" size={size} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button className=\"icon-button\" title=\"gmail\" data-active=\"gmail\" onClick={() => open('mailto:psj2716@gmail.com')}>\r\n\t\t\t\t\t<Icon path={mdiGmail} color=\"grey\" size={size} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button className=\"icon-button\" title=\"project\" data-active=\"project\" onClick={() => open('https://project.itcode.dev')}>\r\n\t\t\t\t\t<Icon path={mdiWeb} color=\"grey\" size={size} />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button className=\"icon-button\" title=\"blog\" data-active=\"blog\" onClick={() => open('https://blog.itcode.dev')}>\r\n\t\t\t\t\t<Icon path={mdiReact} color=\"grey\" size={size} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div data-name=\"info\">\r\n\t\t\t\t<p>💻 Copyright ⓒ RWB 2021.11</p>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n}","/**\r\n * 섹션 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.29 Fri 00:26:07\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport './Section.scss';\r\n\r\ninterface Props {\r\n\turl?: string,\r\n\twidth?: number\r\n\tchildren: any\r\n}\r\n\r\n/**\r\n * 섹션 ReactElement 반환 메서드\r\n *\r\n * @param {Props} props: 컴포넌트 프로퍼티\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Section({ url, width, children }: Props): ReactElement\r\n{\r\n\treturn (\r\n\t\t<section data-section={url} style={{ maxWidth: width ? width : 1024 }}>\r\n\t\t\t{children}\r\n\t\t</section>\r\n\t);\r\n}","export const SITE_NAME = '도로명주소 업무 시스템';\r\nexport const URL = 'https://project.itcode.dev/klid';\r\n","/**\r\n * 메타 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.29 Fri 09:23:34\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { SITE_NAME, URL } from '../../global/variable';\r\nimport './Header.scss';\r\n\r\ninterface Props {\r\n\ttitle: string,\r\n\tdescription?: string,\r\n\turl: string,\r\n\timage: string\r\n}\r\n\r\n/**\r\n * 메타 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Meta({ title, description = '도로명주소 업무 시스템', url, image }: Props): ReactElement\r\n{\r\n\tconst fullTitle = `${title} - ${SITE_NAME}`;\r\n\r\n\treturn (\r\n\t\t<Helmet>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\r\n\t\t\t<meta name=\"og:site_name\" content={SITE_NAME} />\r\n\t\t\t<meta name=\"og:title\" content={fullTitle} />\r\n\t\t\t<meta name=\"og:description\" content={description} />\r\n\t\t\t<meta name=\"og:type\" content=\"website\" />\r\n\t\t\t<meta name=\"og:url\" content={`${URL}${url}`} />\r\n\t\t\t<meta name=\"og:locale\" content=\"ko_KR\" />\r\n\t\t\t<meta name=\"og:image\" content={image} />\r\n\r\n\t\t\t<title>{fullTitle}</title>\r\n\t\t</Helmet>\r\n\t);\r\n}","/**\r\n * 홈 페이지 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 00:49:06\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport Section from '../components/global/Section';\r\nimport Meta from '../components/header/Meta';\r\nimport { URL } from '../global/variable';\r\nimport '../pages-style/Home.scss';\r\n\r\n/**\r\n * 홈 페이지 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Home(): ReactElement\r\n{\r\n\treturn (\r\n\t\t<Section url=\"home\">\r\n\t\t\t<Meta title=\"🏠 Home\" url=\"/\" image={`${URL}/logo.png`} />\r\n\t\t\tHome\r\n\t\t</Section>\r\n\t);\r\n}","/**\r\n * 상태 모듈\r\n *\r\n * @author RWB\r\n * @since 2021.11.03 Wed 00:25:17\r\n */\r\n\r\nimport { atom } from 'recoil';\r\n\r\nexport const defaultItemViewerState = {\r\n\tseq: -1,\r\n\ttype: '모니터링',\r\n\tworker: '',\r\n\tdescription: '',\r\n\tstart: new Date().getTime(),\r\n\tend: new Date().getTime()\r\n};\r\n\r\nexport const itemViewerAtom = atom({\r\n\tkey: 'itemViewerState',\r\n\tdefault: {\r\n\t\tflag: false,\r\n\t\tisAdd: false,\r\n\t\titem: defaultItemViewerState\r\n\t}\r\n});\r\n\r\nexport const itemViewerModeAtom = atom({\r\n\tkey: 'itemViewerModeState',\r\n\tdefault: false\r\n});","import { DateProps } from './props';\r\n\r\n/**\r\n * 날짜 및 시간 정보 반환 함수\r\n *\r\n * @param {string | number | Date} raw: 날짜 및 시간 데이터 (yyyy-MM-ddTHH:mm:ss)\r\n *\r\n * @returns {DateProps} DateProps\r\n */\r\nexport function getDateDetail(raw?: string | number | Date): DateProps\r\n{\r\n\tconst date = raw === undefined ? new Date() : (raw instanceof Date ? raw : new Date(raw));\r\n\tconst weeks = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ];\r\n\r\n\treturn {\r\n\t\tyear: date.getFullYear().toString(),\r\n\t\tmonth: (date.getMonth() + 1) > 9 ? (date.getMonth() + 1).toString() : `0${(date.getMonth() + 1)}`,\r\n\t\tday: date.getDate() > 9 ? date.getDate().toString() : `0${date.getDate()}`,\r\n\t\tweek: weeks[date.getDay()],\r\n\t\thour: date.getHours() > 9 ? date.getHours().toString() : `0${date.getHours()}`,\r\n\t\tminute: date.getMinutes() > 9 ? date.getMinutes().toString() : `0${date.getMinutes()}`,\r\n\t\tsecond: date.getSeconds() > 9 ? date.getSeconds().toString() : `0${date.getSeconds()}`\r\n\t};\r\n}\r\n\r\n/**\r\n * 주 번호 -> 날짜 객체 변환 메서드\r\n *\r\n * @param {number} year: 연\r\n * @param {number} week: 주 번호\r\n * @param {number} dayFlag: 날짜 기준 (0: 월요일 ~ 7: 일요일)\r\n *\r\n * @returns {Date} 날짜 객체\r\n */\r\nexport function week2date(year: number, week: number, dayFlag: number): Date\r\n{\r\n\tconst j10 = new Date(year, 0, 10, 12, 0, 0);\r\n\tconst j4 = new Date(year, 0, 4, 12, 0, 0);\r\n\tconst mon1 = j4.getTime() - j10.getDay() * 86400000;\r\n\r\n\treturn new Date(mon1 + ((week - 1)  * 7  + dayFlag) * 86400000);\r\n}","/**\r\n * 업무 아이템 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 00:49:51\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { WorkItemProps } from '../../global/props';\r\nimport { itemViewerAtom } from '../../global/state';\r\nimport { getDateDetail } from '../../global/util';\r\n\r\ninterface Props extends WorkItemProps {\r\n\tonlyView?: boolean\r\n}\r\n\r\n/**\r\n * 업무 아이템 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @param {WorkItemProps} 업무 아이템\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function WorkItem({ seq, type, worker, description, start, end, onlyView = false }: Props): ReactElement\r\n{\r\n\tconst setItemViewerState = useSetRecoilState(itemViewerAtom);\r\n\r\n\tconst startDate = getDateDetail(start);\r\n\tconst endDate = getDateDetail(end);\r\n\r\n\treturn (\r\n\t\t<tr data-type=\"item\" data-view={onlyView} data-key={seq} onClick={() => !onlyView && setItemViewerState({\r\n\t\t\tflag: true,\r\n\t\t\tisAdd: false,\r\n\t\t\titem: {\r\n\t\t\t\tseq: seq,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tworker: worker,\r\n\t\t\t\tdescription: description || '',\r\n\t\t\t\tstart: start,\r\n\t\t\t\tend: end\r\n\t\t\t}\r\n\t\t})}>\r\n\t\t\t<td align=\"center\" data-name=\"seq\">{seq}</td>\r\n\t\t\t<td align=\"center\" data-name=\"type\">{type}</td>\r\n\t\t\t<td align=\"center\" data-name=\"worker\">{worker}</td>\r\n\t\t\t<td data-name=\"description\">{description}</td>\r\n\t\t\t<td align=\"center\" data-name=\"start\">{`${startDate.year}-${startDate.month}-${startDate.day}`}</td>\r\n\t\t\t<td align=\"center\" data-name=\"end\">{`${endDate.year}-${endDate.month}-${endDate.day}`}</td>\r\n\t\t</tr>\r\n\t);\r\n}","/**\r\n * 업무 리스트 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.29 Fri 02:03:22\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport WorkItem from './WorkItem';\r\nimport { WorkItemProps } from '../../global/props';\r\nimport './WorkList.scss';\r\n\r\ninterface Props {\r\n\tlist?: WorkItemProps[],\r\n\tonlyView?: boolean\r\n}\r\n\r\n/**\r\n * 업무 리스트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function WorkList({ list, onlyView = false }: Props): ReactElement\r\n{\r\n\tconst items = list === undefined || list.length === 0 ? (\r\n\t\t<tr data-type=\"item\" data-view={onlyView}>\r\n\t\t\t<td colSpan={6} align=\"center\">😅 데이터가 존재하지 않습니다</td>\r\n\t\t</tr>\r\n\t) : list.map(({ seq, type, worker, description, start, end }, index) => <WorkItem key={index} seq={seq} type={type} worker={worker} description={description} start={start} end={end} onlyView={onlyView} />);\r\n\r\n\treturn (\r\n\t\t<div className=\"worklist\">\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr data-type=\"header\">\r\n\t\t\t\t\t\t<th data-name=\"seq\">SEQ</th>\r\n\t\t\t\t\t\t<th data-name=\"type\">TYPE</th>\r\n\t\t\t\t\t\t<th data-name=\"worker\">WORKER</th>\r\n\t\t\t\t\t\t<th data-name=\"description\">DESCRIPTION</th>\r\n\t\t\t\t\t\t<th data-name=\"start\">START</th>\r\n\t\t\t\t\t\t<th data-name=\"end\">END</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{items}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}","/**\r\n * 리스트 API 모듈\r\n *\r\n * @author RWB\r\n * @since 2021.11.01 Mon 23:29:49\r\n */\r\n\r\nimport { WorkItemProps } from '../global/props';\r\n\r\nconst API_URL = 'https://api.itcode.dev/klid/api/list';\r\n\r\n/**\r\n * 리스트 반환 API 메서드\r\n *\r\n * @param {string | number} year: 연\r\n * @param {string | number} month: 월\r\n *\r\n * @returns {Promise<WorkItemProps[]>} 비동기 WorkItemProps[] 객체\r\n */\r\nexport async function getList(year: string | number, month: string | number): Promise<WorkItemProps[]>\r\n{\r\n\tconst response = await fetch(`${API_URL}/ym/${year}${month === '' ? '' : `/${month}`}`, { method: 'GET' });\r\n\r\n\tconst { ok } = response;\r\n\tconst json = await response.json();\r\n\r\n\t// 정상 응답일 경우\r\n\tif (ok)\r\n\t{\r\n\t\treturn json.body;\r\n\t}\r\n\r\n\t// 정상 응답이 아닐 경우\r\n\telse\r\n\t{\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\n/**\r\n * 주별 리스트 반환 API 메서드\r\n *\r\n * @param {string | number} year: 연\r\n * @param {string | number} week: 주\r\n *\r\n * @returns {Promise<WorkItemProps[]>} 비동기 WorkItemProps[] 객체\r\n */\r\nexport async function getWeekList(year: string | number, week: string | number): Promise<WorkItemProps[]>\r\n{\r\n\tconst response = await fetch(`${API_URL}/wk/${year}/${week}`, { method: 'GET' });\r\n\r\n\tconst { ok } = response;\r\n\tconst json = await response.json();\r\n\r\n\t// 정상 응답일 경우\r\n\tif (ok)\r\n\t{\r\n\t\treturn json.body;\r\n\t}\r\n\r\n\t// 정상 응답이 아닐 경우\r\n\telse\r\n\t{\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\n/**\r\n * 리스트 추가 응답 반환 API 메서드\r\n *\r\n * @param {WorkItemProps} item: 리스트 아이템\r\n *\r\n * @returns {Promise<boolean>} 비동기 boolean 객체\r\n */\r\nexport async function postList(item: WorkItemProps): Promise<boolean>\r\n{\r\n\tconst response = await fetch(`${API_URL}/item`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(item)\r\n\t});\r\n\r\n\tconst { ok } = response;\r\n\r\n\treturn ok;\r\n}\r\n\r\nexport async function putList(item: WorkItemProps): Promise<string>\r\n{\r\n\tconst response = await fetch(`${API_URL}/item/${item.seq}`, {\r\n\t\tmethod: 'PUT',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(item)\r\n\t});\r\n\r\n\tconst { ok } = response;\r\n\tconst json = await response.json();\r\n\r\n\t// 정상 응답일 경우\r\n\tif (ok)\r\n\t{\r\n\t\treturn json.body;\r\n\t}\r\n\r\n\t// 정상 응답이 아닐 경우\r\n\telse\r\n\t{\r\n\t\treturn '';\r\n\t}\r\n}\r\n\r\nexport async function deleteList(seq: number): Promise<boolean>\r\n{\r\n\tconst response = await fetch(`${API_URL}/item/${seq}`, { method: 'DELETE' });\r\n\r\n\tconst { ok } = response;\r\n\r\n\treturn ok;\r\n}","/**\r\n * 업무 아이템 뷰어 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.11.02 Tue 23:45:56\r\n */\r\n\r\nimport { mdiBookEdit, mdiClose, mdiDeleteOff, mdiFileUpload } from '@mdi/js';\r\nimport Icon from '@mdi/react';\r\nimport React, { ReactElement } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { deleteList, postList, putList } from '../../api/ListAPI';\r\nimport { WorkItemProps } from '../../global/props';\r\nimport { defaultItemViewerState, itemViewerAtom } from '../../global/state';\r\nimport { getDateDetail } from '../../global/util';\r\nimport './ItemViewer.scss';\r\n\r\ninterface Props {\r\n\tisAdd: boolean,\r\n\titem: WorkItemProps\r\n}\r\n\r\n/**\r\n * 업무 아이템 뷰어 ReactElement 반환 메서드\r\n *\r\n * @param {Props} props: 프로퍼티\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function ItemViewer({ isAdd, item }: Props): ReactElement\r\n{\r\n\tconst [ itemViewerState, setItemViewerState ] = useRecoilState(itemViewerAtom);\r\n\r\n\tconst startDate = getDateDetail(item.start);\r\n\tconst endDate = getDateDetail(item.end);\r\n\r\n\treturn (\r\n\t\t<article id=\"itemviewer\" data-show={itemViewerState.flag} onClick={(e) =>\r\n\t\t{\r\n\t\t\tconst { id } = e.target as HTMLElement;\r\n\r\n\t\t\t// itemviewer를 클릭했을 경우\r\n\t\t\tif (id === 'itemviewer')\r\n\t\t\t{\r\n\t\t\t\tsetItemViewerState({ flag: false, isAdd: isAdd, item: defaultItemViewerState });\r\n\t\t\t}\r\n\t\t}}>\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"top\">\r\n\t\t\t\t\t<button data-active=\"close\" onClick={() => setItemViewerState({ flag: false, isAdd: isAdd, item: defaultItemViewerState })}>\r\n\t\t\t\t\t\t<Icon path={mdiClose} color=\"grey\" size={0.75} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form onSubmit={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t(async () =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst { submitter } = e.nativeEvent as SubmitEvent;\r\n\r\n\t\t\t\t\t\tif (submitter?.getAttribute('data-active'))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst active = submitter.getAttribute('data-active');\r\n\r\n\t\t\t\t\t\t\tswitch (active)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcase 'create':\r\n\t\t\t\t\t\t\t\t\tconst createResult = await postList(itemViewerState.item);\r\n\r\n\t\t\t\t\t\t\t\t\t// 생성 결과가 정상일 경우\r\n\t\t\t\t\t\t\t\t\tif (createResult)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tsetItemViewerState({ flag: false, isAdd: isAdd, item: defaultItemViewerState });\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// 생성 결과가 비정상일 경우\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\talert('asfaf');\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 'update':\r\n\t\t\t\t\t\t\t\t\tconst putResult = await putList(itemViewerState.item);\r\n\r\n\t\t\t\t\t\t\t\t\t// 갱신 결과가 정상일 경우\r\n\t\t\t\t\t\t\t\t\tif (putResult !== '')\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tsetItemViewerState({ flag: false, isAdd: isAdd, item: defaultItemViewerState });\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// 갱신 결과가 비정상일 경우\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\talert('asfaf');\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 'delete':\r\n\t\t\t\t\t\t\t\t\tconst deleteResult = await deleteList(itemViewerState.item.seq);\r\n\r\n\t\t\t\t\t\t\t\t\t// 삭제 결과가 정상일 경우\r\n\t\t\t\t\t\t\t\t\tif (deleteResult)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tsetItemViewerState({ flag: false, isAdd: isAdd, item: defaultItemViewerState });\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// 삭제 결과가 비정상일 경우\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\talert('asfaf');\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<div className=\"full-width\">\r\n\t\t\t\t\t\t<p>No. {item.seq === -1 ? 'New' : item.seq}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"type\">타입<span>*</span></label>\r\n\r\n\t\t\t\t\t\t<select name=\"type\" value={item.type} onChange={(e) => setItemViewerState({\r\n\t\t\t\t\t\t\tflag: itemViewerState.flag,\r\n\t\t\t\t\t\t\tisAdd,\r\n\t\t\t\t\t\t\titem: {\r\n\t\t\t\t\t\t\t\tseq: itemViewerState.item.seq,\r\n\t\t\t\t\t\t\t\ttype: e.target.value,\r\n\t\t\t\t\t\t\t\tworker: itemViewerState.item.worker,\r\n\t\t\t\t\t\t\t\tdescription: itemViewerState.item.description,\r\n\t\t\t\t\t\t\t\tstart: itemViewerState.item.start,\r\n\t\t\t\t\t\t\t\tend: itemViewerState.item.end\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}>\r\n\t\t\t\t\t\t\t<option value=\"모니터링\">모니터링</option>\r\n\t\t\t\t\t\t\t<option value=\"KAIS 기술지원\">KAIS 기술지원</option>\r\n\t\t\t\t\t\t\t<option value=\"자치단체 기술지원\">자치단체 기술지원</option>\r\n\t\t\t\t\t\t\t<option value=\"정기점검\">정기점검</option>\r\n\t\t\t\t\t\t\t<option value=\"중점개선\">중점개선</option>\r\n\t\t\t\t\t\t\t<option value=\"교육\">교육</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"worker\">담당자<span>*</span></label>\r\n\t\t\t\t\t\t<input name=\"worker\" type=\"text\" placeholder=\"담당자\" value={item.worker} required onChange={(e) => setItemViewerState({\r\n\t\t\t\t\t\t\tflag: itemViewerState.flag,\r\n\t\t\t\t\t\t\tisAdd,\r\n\t\t\t\t\t\t\titem: {\r\n\t\t\t\t\t\t\t\tseq: itemViewerState.item.seq,\r\n\t\t\t\t\t\t\t\ttype: itemViewerState.item.type,\r\n\t\t\t\t\t\t\t\tworker: e.target.value,\r\n\t\t\t\t\t\t\t\tdescription: itemViewerState.item.description,\r\n\t\t\t\t\t\t\t\tstart: itemViewerState.item.start,\r\n\t\t\t\t\t\t\t\tend: itemViewerState.item.end\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"start\">수행일자<span>*</span></label>\r\n\t\t\t\t\t\t<input name=\"start\" type=\"date\" value={`${startDate.year}-${startDate.month}-${startDate.day}`} onChange={(e) => setItemViewerState({\r\n\t\t\t\t\t\t\tflag: itemViewerState.flag,\r\n\t\t\t\t\t\t\tisAdd,\r\n\t\t\t\t\t\t\titem: {\r\n\t\t\t\t\t\t\t\tseq: itemViewerState.item.seq,\r\n\t\t\t\t\t\t\t\ttype: itemViewerState.item.type,\r\n\t\t\t\t\t\t\t\tworker: itemViewerState.item.worker,\r\n\t\t\t\t\t\t\t\tdescription: itemViewerState.item.description,\r\n\t\t\t\t\t\t\t\tstart: new Date(e.target.value).getTime(),\r\n\t\t\t\t\t\t\t\tend: itemViewerState.item.end\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label htmlFor=\"end\">완료일자<span>*</span></label>\r\n\t\t\t\t\t\t<input name=\"end\" type=\"date\" value={`${endDate.year}-${endDate.month}-${endDate.day}`} onChange={(e) => setItemViewerState({\r\n\t\t\t\t\t\t\tflag: itemViewerState.flag,\r\n\t\t\t\t\t\t\tisAdd,\r\n\t\t\t\t\t\t\titem: {\r\n\t\t\t\t\t\t\t\tseq: itemViewerState.item.seq,\r\n\t\t\t\t\t\t\t\ttype: itemViewerState.item.type,\r\n\t\t\t\t\t\t\t\tworker: itemViewerState.item.worker,\r\n\t\t\t\t\t\t\t\tdescription: itemViewerState.item.description,\r\n\t\t\t\t\t\t\t\tstart: itemViewerState.item.start,\r\n\t\t\t\t\t\t\t\tend: new Date(e.target.value).getTime()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"full-width\">\r\n\t\t\t\t\t\t<label htmlFor=\"description\">내용</label>\r\n\t\t\t\t\t\t<input name=\"description\" type=\"text\" placeholder=\"내용\" value={item.description} onChange={(e) => setItemViewerState({\r\n\t\t\t\t\t\t\tflag: itemViewerState.flag,\r\n\t\t\t\t\t\t\tisAdd,\r\n\t\t\t\t\t\t\titem: {\r\n\t\t\t\t\t\t\t\tseq: itemViewerState.item.seq,\r\n\t\t\t\t\t\t\t\ttype: itemViewerState.item.type,\r\n\t\t\t\t\t\t\t\tworker: itemViewerState.item.worker,\r\n\t\t\t\t\t\t\t\tdescription: e.target.value,\r\n\t\t\t\t\t\t\t\tstart: itemViewerState.item.start,\r\n\t\t\t\t\t\t\t\tend: itemViewerState.item.end\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{interactive(isAdd)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\n/**\r\n * 업무 아이템 뷰어 상호작용 ReactElement 반환 메서드\r\n *\r\n * @param {boolean} isAdd: 추가 모드 여부\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nfunction interactive(isAdd: boolean): ReactElement\r\n{\r\n\treturn isAdd ? (\r\n\t\t<div className=\"full-width interactive\">\r\n\t\t\t<button className=\"icon-button\" data-active=\"create\">\r\n\t\t\t\t<Icon path={mdiFileUpload} color=\"white\" size={0.75} /> 추가\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"full-width interactive\">\r\n\t\t\t<button className=\"icon-button\" data-active=\"update\">\r\n\t\t\t\t<Icon path={mdiBookEdit} color=\"white\" size={0.75} /> 수정\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className=\"icon-button\" data-active=\"delete\">\r\n\t\t\t\t<Icon path={mdiDeleteOff} color=\"white\" size={0.75} /> 삭제\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}","/**\r\n * 리스트 페이지 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 00:49:24\r\n */\r\n\r\nimport React, { ReactElement, useEffect, useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { Icon } from '@mdi/react';\r\nimport { mdiPlus } from '@mdi/js';\r\n\r\nimport Section from '../components/global/Section';\r\nimport WorkList from '../components/list/WorkList';\r\nimport ItemViewer from '../components/list/ItemViewer';\r\nimport { getList } from '../api/ListAPI';\r\nimport { WorkItemProps } from '../global/props';\r\nimport { defaultItemViewerState, itemViewerAtom } from '../global/state';\r\n\r\nimport '../pages-style/List.scss';\r\nimport Meta from '../components/header/Meta';\r\nimport { URL } from '../global/variable';\r\n\r\n/**\r\n * 리스트 페이지 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function List(): ReactElement\r\n{\r\n\tconst [ itemViewerState, setItemViewerState ] = useRecoilState(itemViewerAtom);\r\n\r\n\tconst [ year, setYear ] = useState<string | number>(new Date().getFullYear());\r\n\tconst [ month, setMonth ] = useState<string | number>('');\r\n\tconst [ list, setList ] = useState<WorkItemProps[]>([]);\r\n\r\n\tuseEffect(() =>\r\n\t{\r\n\t\t(async() =>\r\n\t\t{\r\n\t\t\tconst yearList = await getList(year, month);\r\n\r\n\t\t\tsetList(yearList);\r\n\t\t})();\r\n\t}, [ year, month, itemViewerState.flag ]);\r\n\r\n\treturn (\r\n\t\t<Section url=\"list\" width={1600}>\r\n\t\t\t<Meta title=\"📋 List\" url=\"/list\" image={`${URL}/logo.png`} />\r\n\r\n\t\t\t<div className=\"pannel\">\r\n\t\t\t\t<button className=\"icon-button add\" onClick={() => setItemViewerState({ flag: true, isAdd: true, item: defaultItemViewerState })}>\r\n\t\t\t\t\t<Icon path={mdiPlus} color=\"white\" size={1} /> 추가\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<input type=\"number\" name=\"year\" aria-label=\"year\" value={year} max=\"2099\" onChange={(e) => setYear(e.currentTarget.value)} />\r\n\r\n\t\t\t\t<select value={month} name=\"month\" aria-label=\"month\" onChange={(e) => setMonth(e.currentTarget.value)}>\r\n\t\t\t\t\t<option value=\"\">전체</option>\r\n\t\t\t\t\t<option value=\"1\">1월</option>\r\n\t\t\t\t\t<option value=\"2\">2월</option>\r\n\t\t\t\t\t<option value=\"3\">3월</option>\r\n\t\t\t\t\t<option value=\"4\">4월</option>\r\n\t\t\t\t\t<option value=\"5\">5월</option>\r\n\t\t\t\t\t<option value=\"6\">6월</option>\r\n\t\t\t\t\t<option value=\"7\">7월</option>\r\n\t\t\t\t\t<option value=\"8\">8월</option>\r\n\t\t\t\t\t<option value=\"9\">9월</option>\r\n\t\t\t\t\t<option value=\"10\">10월</option>\r\n\t\t\t\t\t<option value=\"11\">11월</option>\r\n\t\t\t\t\t<option value=\"12\">12월</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\r\n\t\t\t<WorkList list={list} />\r\n\r\n\t\t\t<ItemViewer isAdd={itemViewerState.isAdd} item={itemViewerState.item} />\r\n\t\t</Section>\r\n\t);\r\n}","/**\r\n * 통계 API 모듈\r\n *\r\n * @author RWB\r\n * @since 2021.11.06 Sat 03:26:36\r\n */\r\n\r\nimport { StatProps } from '../global/props';\r\n\r\nconst API_URL = 'https://api.itcode.dev/klid/api/statistics';\r\n\r\n/**\r\n * 통계 반환 API 메서드\r\n *\r\n * @param {string | number} year\r\n * @param {string | number} month\r\n * @param {string | number} day\r\n *\r\n * @returns {Promise<StatProps[]>} 비동기 StatProps[] 객체\r\n */\r\nexport async function getStatistics(year: string | number, week: string | number): Promise<StatProps[]>\r\n{\r\n\tconst response = await fetch(`${API_URL}/${year}/${week}`, { method: 'GET' });\r\n\r\n\tconst { ok } = response;\r\n\tconst json = await response.json();\r\n\r\n\t// 정상 응답일 경우\r\n\tif (ok)\r\n\t{\r\n\t\treturn json.body;\r\n\t}\r\n\r\n\t// 정상 응답이 아닐 경우\r\n\telse\r\n\t{\r\n\t\treturn [];\r\n\t}\r\n}","/**\r\n * 월 통계 테이블 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.11.11 Thu 16:36:19\r\n */\r\n\r\nimport { ReactElement } from 'react';\r\nimport { StatProps } from '../../global/props';\r\nimport { getDateDetail } from '../../global/util';\r\nimport  './Table.scss';\r\n\r\ninterface Props {\r\n\tstat?: StatProps\r\n}\r\n\r\n/**\r\n * 월 통계 테이블 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @param {Props} 프로퍼티\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function MonthTable({ stat }: Props): ReactElement\r\n{\r\n\tconst startDate = getDateDetail(stat?.meta.start_date );\r\n\tconst endDate = getDateDetail(stat?.meta.end_date);\r\n\r\n\treturn (\r\n\t\t<table className=\"stat-table\" data-type=\"month\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th colSpan={9}>{`${startDate.year}-${startDate.month}-${startDate.day} ~ ${endDate.year}-${endDate.month}-${endDate.day}`}</th>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th colSpan={6}>당월 접수 현황</th>\r\n\t\t\t\t\t<th colSpan={3}>당월 처리 현황</th>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>모니터링</th>\r\n\t\t\t\t\t<th>KAIS</th>\r\n\t\t\t\t\t<th>자치단체</th>\r\n\t\t\t\t\t<th>정기점검</th>\r\n\t\t\t\t\t<th>중점점검</th>\r\n\t\t\t\t\t<th>교육</th>\r\n\t\t\t\t\t<th>접수</th>\r\n\t\t\t\t\t<th>완료</th>\r\n\t\t\t\t\t<th>처리중</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td data-td=\"monitor\" align=\"center\">{stat?.all.monitor || 0}</td>\r\n\t\t\t\t\t<td data-td=\"kais\" align=\"center\">{stat?.all.kais || 0}</td>\r\n\t\t\t\t\t<td data-td=\"city\" align=\"center\">{stat?.all.city || 0}</td>\r\n\t\t\t\t\t<td data-td=\"check\" align=\"center\">{stat?.all.check || 0}</td>\r\n\t\t\t\t\t<td data-td=\"develope\" align=\"center\">{stat?.done.develope || 0}</td>\r\n\t\t\t\t\t<td data-td=\"educate\" align=\"center\">{stat?.all.educate || 0}</td>\r\n\t\t\t\t\t<td data-td=\"total\" align=\"center\">{stat?.all.total || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.total || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.total || 0}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}","/**\r\n * 전체 통계 테이블 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.11.11 Thu 12:53:01\r\n */\r\n\r\nimport { ReactElement } from 'react';\r\nimport { StatProps } from '../../global/props';\r\nimport { getDateDetail } from '../../global/util';\r\nimport  './Table.scss';\r\n\r\ninterface Props {\r\n\ttitle?: string,\r\n\tstat?: StatProps\r\n}\r\n\r\n/**\r\n * 전체 통계 테이블 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @param {Props} 프로퍼티\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function TotalTable({ title, stat }: Props): ReactElement\r\n{\r\n\tconst startDate = getDateDetail(stat?.meta.start_date);\r\n\tconst endDate = getDateDetail(stat?.meta.end_date);\r\n\r\n\tconst percent = isNaN((stat?.done.total || 0) / (stat?.all.total || 0) * 100) ? 100 : Math.ceil((stat?.done.total || 0) / (stat?.all.total || 0) * 10000) / 100;\r\n\r\n\treturn (\r\n\t\t<table className=\"stat-table\" data-type=\"total\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th colSpan={2}>{title}</th>\r\n\t\t\t\t\t<th colSpan={2}>{`${startDate.year}-${startDate.month}-${startDate.day} ~ ${endDate.year}-${endDate.month}-${endDate.day}`}</th>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>접수</th>\r\n\t\t\t\t\t<th>완료</th>\r\n\t\t\t\t\t<th>처리중</th>\r\n\t\t\t\t\t<th>비율</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.total || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.total || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{(stat?.all.total || 0) - (stat?.done.total || 0)}</td>\r\n\t\t\t\t\t<td data-td=\"percent\" align=\"center\">{percent}%</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}","import { ReactElement } from 'react';\r\nimport { getDateDetail } from '../../global/util';\r\nimport { StatProps } from '../../global/props';\r\nimport  './Table.scss';\r\n\r\ninterface Props {\r\n\ttitle?: string,\r\n\tstat?: StatProps\r\n}\r\n\r\nexport default function DetailTable({ title, stat }: Props): ReactElement\r\n{\r\n\tconst startDate = getDateDetail(stat?.meta.start_date);\r\n\tconst endDate = getDateDetail(stat?.meta.end_date);\r\n\r\n\treturn (\r\n\t\t<table className=\"stat-table\" data-type=\"detail\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th colSpan={2}>{title}</th>\r\n\t\t\t\t\t<th colSpan={2}>{`${startDate.year}-${startDate.month}-${startDate.day} ~ ${endDate.year}-${endDate.month}-${endDate.day}`}</th>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>구분</th>\r\n\t\t\t\t\t<th>접수</th>\r\n\t\t\t\t\t<th>완료</th>\r\n\t\t\t\t\t<th>처리중</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr data-tr=\"total\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">합계</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.total || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.total || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.total || 0}</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr data-tr=\"monitor\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">모니터링</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.monitor || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.monitor || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.monitor || 0}</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr data-tr=\"kais\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">KAIS</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.kais || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.kais || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.kais || 0}</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr data-tr=\"city\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">자치단체</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.city || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.city || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.city || 0}</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr data-tr=\"check\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">정기점검</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.check || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.check || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.check || 0}</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr data-tr=\"develope\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">중점개선</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.develope || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.develope || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.develope || 0}</td>\r\n\t\t\t\t</tr>\r\n\r\n\t\t\t\t<tr data-tr=\"educate\">\r\n\t\t\t\t\t<td data-td=\"title\" align=\"center\">교육</td>\r\n\t\t\t\t\t<td data-td=\"all\" align=\"center\">{stat?.all.educate || 0}</td>\r\n\t\t\t\t\t<td data-td=\"done\" align=\"center\">{stat?.done.educate || 0}</td>\r\n\t\t\t\t\t<td data-td=\"fail\" align=\"center\">{stat?.fail.educate || 0}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}","/**\r\n * 통계 페이지 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 00:49:37\r\n */\r\n\r\nimport React, { ReactElement, useState } from 'react';\r\nimport Section from '../components/global/Section';\r\nimport { getStatistics } from '../api/StatisticsAPI';\r\nimport Meta from '../components/header/Meta';\r\nimport MonthTable from '../components/statistics/MonthTable';\r\nimport TotalTable from '../components/statistics/TotalTable';\r\nimport DetailTable from '../components/statistics/DetailTable';\r\nimport { URL } from '../global/variable';\r\nimport { WorkItemProps, StatProps } from '../global/props';\r\nimport '../pages-style/Statistics.scss';\r\nimport WorkList from '../components/list/WorkList';\r\nimport { getWeekList } from '../api/ListAPI';\r\n\r\n/**\r\n * 통계 페이지 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Statistics(): ReactElement\r\n{\r\n\tconst [ listState, setListState ] = useState<WorkItemProps[]>();\r\n\r\n\tconst [ yearState, setYearState ] = useState<StatProps>();\r\n\tconst [ monthState, setMonthtate ] = useState<StatProps>();\r\n\tconst [ presentState, setPresentState ] = useState<StatProps>();\r\n\tconst [ pastState, setPastState ] = useState<StatProps>();\r\n\r\n\treturn (\r\n\t\t<Section url=\"statistics\" width={1200}>\r\n\t\t\t<Meta title=\"📊 Statistics\" url=\"/statistics\" image={`${URL}/logo.png`} />\r\n\r\n\t\t\t<div className=\"pannel\">\r\n\t\t\t\t<input type=\"week\" name=\"week\" aria-label=\"week\" onChange={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tconst [ yr, wk ] = e.target.value.split('-W');\r\n\r\n\t\t\t\t\t(async () =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst [ year, month, present, past ] = await getStatistics(yr, wk);\r\n\t\t\t\t\t\tconst response = await getWeekList(yr, wk);\r\n\r\n\t\t\t\t\t\tsetListState(response);\r\n\r\n\t\t\t\t\t\tsetYearState(year);\r\n\t\t\t\t\t\tsetMonthtate(month);\r\n\t\t\t\t\t\tsetPresentState(present);\r\n\t\t\t\t\t\tsetPastState(past);\r\n\t\t\t\t\t})();\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"stat\">\r\n\t\t\t\t<div className=\"full-width\">\r\n\t\t\t\t\t<MonthTable stat={monthState} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TotalTable title=\"연 현황\" stat={yearState} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TotalTable title=\"금주 현황\" stat={presentState} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TotalTable title=\"전주 현황\" stat={pastState} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DetailTable title=\"연 세부 현황\" stat={yearState} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DetailTable title=\"금주 세부 현황\" stat={presentState} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DetailTable title=\"전주 세부 현황\" stat={pastState}  />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"full-width\">\r\n\t\t\t\t\t<WorkList list={listState} onlyView />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Section>\r\n\t);\r\n}","/**\r\n * 보고서 페이지 컴포넌트\r\n *\r\n * @author RWB\r\n * @since 2021.10.28 Thu 00:49:51\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport Section from '../components/global/Section';\r\nimport Meta from '../components/header/Meta';\r\nimport { URL } from '../global/variable';\r\n\r\n/**\r\n * 보고서 페이지 컴포넌트 ReactElement 반환 메서드\r\n *\r\n * @returns {ReactElement} 컴포넌트 ReactElement\r\n */\r\nexport default function Report(): ReactElement\r\n{\r\n\treturn (\r\n\t\t<Section url=\"report\">\r\n\t\t\t<Meta title=\"📝 Report\" url=\"/report\" image={`${URL}/logo.png`} />\r\n\t\t</Section>\r\n\t);\r\n}","/**\n * 애플리케이션 컴포넌트\n *\n * @author RWB\n * @since 2021.10.28 Thu 00:42:55\n */\n\nimport React, { ReactElement } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Home from './pages/Home';\nimport List from './pages/List';\nimport Statistics from './pages/Statistics';\nimport Report from './pages/Report';\nimport { RecoilRoot } from 'recoil';\nimport { HelmetProvider } from 'react-helmet-async';\n\n/**\n * 애플리케이션 컴포넌트 ReactElement 반환 메서드\n *\n * @returns {ReactElement} 컴포넌트 ReactElement\n */\nexport default function App(): ReactElement\n{\n\treturn (\n\t\t<RecoilRoot>\n\t\t\t<HelmetProvider>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\n\t\t\t\t\t\t<Route path=\"/report\" component={Report} />\n\t\t\t\t\t\t<Route path=\"/\" component={Home} />\n\t\t\t\t\t</Switch>\n\n\t\t\t\t\t<Footer />\n\t\t\t\t</HashRouter>\n\t\t\t</HelmetProvider>\n\t\t</RecoilRoot>\n\t);\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void =>\n{\n\tif (onPerfEntry && onPerfEntry instanceof Function)\n\t{\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) =>\n\t\t{\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;","/**\n * 인덱스 모듈\n *\n * @author RWB\n * @since 2021.10.28 Thu 00:54:28\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './global/reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementsByTagName('main')[0]\n);\n\nreportWebVitals();"],"sourceRoot":""}